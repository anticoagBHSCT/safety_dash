<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VKA Dashboard</title>
    <style>

      .content {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 0.9rem;
      }

      @media print {
          .pagebreak { page-break-before: always; }
          .header {
              position: fixed;
              top: 0;
              left: 0;
              right: 0;
              font-family: Arial, Helvetica, sans-serif;
              font-size: 0.5rem;
              background-color: #f0f0f0; /* Customize header background color */
              padding: 5px; /* Add padding for spacing */
              text-align: left; /* Center-align header content */
          }

          .footer {
              position: fixed;
              bottom: 0;
              left: 0;
              right: 0;
              font-family: Arial, Helvetica, sans-serif;
              font-size: 0.5rem;
              background-color: #f0f0f0; /* Customize footer background color */
              padding: 10px; /* Add padding for spacing */
              text-align: center; /* Center-align footer content */
          }
      }
      @media screen {
          .header,
          .footer {
              display: none;
          }
      }
  </style>
    <script>
      window.onload = function () {
          const pageNums = document.querySelectorAll('.pagenum');
          pageNums.forEach((el, index) => {
              el.textContent = index + 1;
          });
      };
  </script>
  <!-- Plotly CDN -->
  <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    

</head>
<body>
  <div class="header">VKA Dashboard</div>
  <div class="content">
<!--Header-->
    <%IncludeMessage(context, "[**Part**] Letter Header")%>
    <hr>
    <%IncludeMessage(context, "[**Part**] Name DOB HCN")%>(<%Day(Date())%> <%MonthName(Month(Date()))%> <%Year(Date())%>)
<!--Header-->

    <table id="parameters" hidden>
        <tr>
            <th>Parameter</th>
            <th>Value</th>
        </tr>
        <tr>
            <td>TTR6month</td>
            <!-- <td>45</td> -->
            <td><%IncludeMessage(context, "[**Part**] TIR 6 month")%></td>
        </tr>
        <tr>
            <td>TTR12month</td>
            <!-- <td>70</td> -->
            <td><%IncludeMessage(context, "[**Part**] 12 month TIR")%></td>
        </tr>
        <tr>
          <td>VGR 3 month</td>
          <!-- <td>0.3</td> -->
          <td><%IncludeMessage(context, "[**Part**] VGR")%></td>
        </tr>
        <tr>
            <td>DNAs 12 months</td>
            <!-- <td>2</td> -->
            <td><%IncludeMessage(context, "[**Part**] Non attendance count (12 month)")%></td>
        </tr>
        <tr>
          <td>INRs 12 months</td>
          <!-- <td>40</td> -->
          <td><%IncludeMessage(context, "[**Part**] INRs recorded (12 month)")%></td>
      </tr>
      <tr>
        <td>TTR start date</td>
        <!-- <td>2023-08-16</td> -->
        <td><%IncludeMessage(context, "[**Part**] TIR Start Date")%></td>
      </tr>
      <tr>
        <td>% Below</td>
        <!-- <td>15</td> -->
        <td><%IncludeMessage(context, "[**Part**] Percentage Below Range")%></td>
      </tr>
      <tr>
        <td>% Above</td>
        <!-- <td>15</td> -->
        <td><%IncludeMessage(context, "[**Part**] Percentage Above Range")%></td>
      </tr>
    </table>
    <hr>
<table id="textinfo">
  <tr>
    <td>
      <p><b>Time in Therapeutic Range (TTR) 6 month</b></p>
      <p>TTR' or 'Time in Therapeutic Range' is a way of measuring how effectively controlled anticoagulation has been over a period of time. Ideally if INRs were always in range the TTR would be 100% but due to the nature of anticoagulants
        this is not usually possible.
      </p>
      <!--This is the value table-->
      <table>
        <tr>
          <td><small>INR count: 8</small></td>
        </tr>
      </table>
    </td>
    <td><div id="6monthplot"></div></td>
  </tr>
  <tr>
    <td>
      <p><b>Variance Growth Rate 3 month</b></p>
      <p>The VGR measurement looks at the variability between the INR values to determine how 'stable' they are. The VGR value increases when the difference betweem the recorded INR to the target INR is greater.</p>
      <!--This is the value table-->
      <table>
        <tr>
          <td><small>INR count: 8</small></td>
        </tr>
      </table>
    </td>
    <td><div id="vgrplot"></div></td>
  </tr>
  <tr>
    <td><p><b>TTR 6 month prior</b></p>
      <p>If we have more INRs recorded we can compare against the previous 6 months TTR value.</p>
        <!--This is the value table-->
        <table>
          <tr>
            <td><small>INR count: 8</small></td>
          </tr>
        </table>  
    </td>
    <td><div id="prior6monthplot"></div></td>
  </tr>
  <tr>
    <td>
      <p><b>TTR 12 month</b></p>
       <p>The is the TTR value for the past year if INRs have been recorded for that long.</p> 
      <!--This is the value table-->
      <table>
        <tr>
          <td><small>INR count: 8</small></td>
        </tr>
      </table>
    </td>
    <td><div id="12monthplot"></div></td>
  </tr>
  <tr>
    <td>
      <p><b>Above or Below 12 month</b></p>
       <p>This plot shows whether INRs tended to be more below or more above the target range for the past year.</p> 
      <!--This is the value table-->
      <table>
        <tr>
          <td><small>Above:</small></td>
          <td><small>In:</small></td>
          <td><small>Below:</small></td>
        </tr>
      </table>
    </td>
    <td><div id="abovebelowplot"></div></td>
  </tr>
  <tr>
    <td>
      <p><b>Attendance 12 month</b></p>
      <p>It is important to attend for INR checks, if you are attending BCH clinic either virtually or in-person to Wing K.</p>
      <!--This is the value table-->
      <table>
        <tr>
          <td><small>Did not attend:</small></td>
        </tr>
      </table>      

    </td>
    <td><div id="dNAplot"></div></td>
  </tr>
</table>
<div class="pagebreak"></div>


    <script>
        // Get the values from table
        var table = document.getElementById('parameters');
        var cell1 = table.rows[1].cells[1]; // Second row, second column
        var cell2 = table.rows[2].cells[1];
        var cell3 = table.rows[3].cells[1];
        var cell4 = table.rows[4].cells[1];
        var cell5 = table.rows[5].cells[1];
        var cell6 = table.rows[6].cells[1];
        var cell7 = table.rows[7].cells[1];
        var cell8 = table.rows[8].cells[1];

        //--6 month TTR and 3 month VGR
        var tir6 = cell1.textContent;
        var vgr = cell3.textContent;
    
        //--12 month TTR
        var tir12 = cell2.textContent;
         var below12 = cell7.textContent;
         var above12 = cell8.textContent;

//--prior 6 month and 12 month TTR only if 7 months data
        const [year, month, day] = (cell6.textContent).split('-');
        const ttrstart = new Date(year, month-1, day);   
        var minus11months = new Date();
          minus11months.setMonth(minus11months.getMonth()-7);
        
          if(ttrstart < minus11months){
         var prior6TTR= (tir12*2)-tir6;        
        }

//--this block for attendance        
        var inr12 = parseInt(cell5.textContent);  
        var dna12 = parseInt(cell4.textContent);      
        var att = inr12/(inr12+dna12)*100;

        var avweek = (Math.round((inr12/52)*100)/100);

 //--- TTR 6 month plot below   
    var data = [
  {
    type: "indicator",
    mode: "gauge+number+delta",
    value: tir6,
    title: { text: "6 month TTR", font: { size: 14} },
    number: {suffix:"%", valueformat: '.0f'},
    delta: { reference: prior6TTR, increasing: { color: "Green"}, decreasing: { color: "Pink"}, relative:true },
    gauge: {
      shape: "bullet",
      axis: { range: [null, 100], tickwidth: 1, tickcolor: "darkblue", ticksuffix:"%" },
      bar: { color: "green" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "gray",
      steps: [
        { range: [0, 52], color: "lightpink" },
        { range: [53, 72], color: "lightyellow" },
        { range: [73, 100], color: "lightgreen" }
      ]
    }
  }
];

var layout = {
  width: 400,
  height: 100,
  margin: { t: 25, r: 50, l: 100, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" }
};

Plotly.newPlot('6monthplot', data, layout);

//------VGR plot below

var data = [
  {
    type: "indicator",
    mode: "gauge+number+delta",
    value: vgr,
    title: { text: "VGR", font: { size: 14} },
    gauge: {
      shape: "bullet",
      axis: { range: [null, 1], tickwidth: 1, tickcolor: "darkblue"},
      bar: { color: "green" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "gray",
      steps: [
        { range: [0, 0.14], color: "lightgreen" },
        { range: [0.15, 0.44], color: "lightyellow" },
        { range: [0.45, 1], color: "lightpink" }
      ]
    }
  }
];

var layout = {
  width: 400,
  height: 100,
  margin: { t: 25, r: 50, l: 100, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" }
};

Plotly.newPlot('vgrplot', data, layout);

//--Prior 6 month TTR plot below----


var data = [
  {
    type: "indicator",
    mode: "gauge+number+delta",
    value: prior6TTR,
    title: { text: "Prior 6 month</br></br>TTR", font: { size: 14} },
    number: {suffix:"%", valueformat: '.0f'},
    delta: { reference: prior6TTR, increasing: { color: "RebeccaPurple"} },
    gauge: {
      shape: "bullet",
      axis: { range: [null, 100], tickwidth: 1, tickcolor: "darkblue", ticksuffix:"%" },
      bar: { color: "green" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "gray",
      steps: [
      { range: [0, 52], color: "lightpink" },
        { range: [53, 72], color: "lightyellow" },
        { range: [73, 100], color: "lightgreen" }
      ]
    }
  }
];

var layout = {
  width: 400,
  height: 100,
  margin: { t: 25, r: 50, l: 100, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" }
};

Plotly.newPlot('prior6monthplot', data, layout);


//------TTR 12 month plot below

var data = [
  {
    type: "indicator",
    mode: "gauge+number+delta",
    value: tir12,
    title: { text: "12 month TTR", font: { size: 14} },
    number: {suffix:"%", valueformat: '.0f'},
    delta: { reference: tir12, increasing: { color: "RebeccaPurple" } },
    gauge: {
      shape: "bullet",
      axis: { range: [null, 100], tickwidth: 1, tickcolor: "darkblue", ticksuffix:"%" },
      bar: { color: "green" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "gray",
      steps: [
      { range: [0, 52], color: "lightpink" },
        { range: [53, 72], color: "lightyellow" },
        { range: [73, 100], color: "lightgreen" }
      ]
    }
  }
];

var layout = {
  width: 400,
  height: 100,
  margin: { t: 25, r: 50, l: 100, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" }
};

Plotly.newPlot('12monthplot', data, layout);

//------Above/Below 12 month plot below

var trace1 = {
  x: [below12],
  name: 'Below',
  orientation: 'h',
  marker: {
    color: 'lightblue',
    width: 1
  },
  type: 'bar'
};

var trace2 = {
  x: [tir12],
  name: 'In',
  orientation: 'h',
  marker: {
    color: 'lightgreen',
    width: 1
  },
  type: 'bar'
};

var trace3 = {
  x: [above12],
  name: 'Above',
  orientation: 'h',
  type: 'bar',
  marker: {
    color: 'lightpink',
    width: 1
  }
};

var data = [trace1, trace2, trace3];

var layout = {
  width: 400,
  height: 120,
  margin: { t: 25, r: 50, l: 100, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" },
  barmode: 'stack', 
  xaxis: {ticksuffix:"%"}, 
  yaxis: {visible: false}
};

Plotly.newPlot('abovebelowplot', data, layout);



//------Non-attendances 12 month plot below
var data = [
  {
    type: "indicator",
    mode: "gauge+number+delta",
    value: att,
    title: { text: "Attendances", font: { size: 14} },
    number: {suffix:"%", valueformat: '.0f'},
    //delta: { reference: tir12, increasing: { color: "RebeccaPurple" } },
    gauge: {
      shape: "bullet",
      axis: { range: [90, 100], tickwidth: 1, tickcolor: "darkblue", ticksuffix:"%" },
      bar: { color: "green" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "gray",
      steps: [
      { range: [0, 90], color: "white" },
      { range: [90, 95], color: "lightpink" },
        { range: [95, 98], color: "lightyellow" },
        { range: [98, 100], color: "lightgreen" }
      ]
    }
  }
];

var layout = {
  width: 400,
  height: 100,
  margin: { t: 25, r: 50, l: 100, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" }
};

Plotly.newPlot('dNAplot', data, layout);

</script>
</div>
<div class="footer">Page <span class="pagenum"></span></div>
</body>
</html>

